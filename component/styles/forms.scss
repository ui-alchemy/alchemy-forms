@import "alchemy/alchemy";
@import "forms_vars";
@import "forms_mixins";

/**
 * @name Forms
 *
 * @description Basic styling for form element.
 *
 * .form class to apply to form element to achieve base level styling
 */
.form {
  width: 100%;
  display: block;
  line-height: 1;
  color: $text_color;
}

/**
 * @name Control Group
 *
 * @description Defines a container for wrapping a label and input combination
 *   to provide complimentary styling when the two are paired together.
 *
 * .control-group defines the wrapping container that a label and input should be placed within
 * .control-label the wrapping container that a label should be placed within
 * .control-input the wrapping container that an input should be placed within
 */
.control_group,
.control-group  {
  padding: .4em .7em;
  position: relative;

  .label,
  .control-label {
    width: $left_column_width;
    float: left;
    text-align: right;
    position: relative;
    padding: 0;

    label {
      line-height: 1.3;
      display: inline-block;
      padding: .75em 1.75em .75em .1em;
    }
  }

  .input,
  .control-input {
    margin-left: $left_column_width;
    position: relative;
    min-height: 2.5em;
  }
}

/**
 * @name Fieldset
 *
 * @description Defines a standard styling for fieldsets which serve as built-in input wrappers.
 *
 * fieldset defines a basic fielset look
 * legend   defines a basic styling for legends within a fieldset
 */
fieldset {
  border: 1px solid $fieldset_border_color;
  @include border-radius(5px);
  padding: 0 0 .5em;
  margin: 0 0 .75em;
  background: $fieldset_background_color;

  legend {
    width: auto;
    margin-left: .75em;
    padding: .1em .5em;
    color: $fieldset_text_color;
    @include background(linear-gradient(rgba(white, 1), rgba(white, 0) 90%));
  }
}

/**
 * @name Inputs
 *
 * @description Defines a styling standard for all input types.
 *
 */
input,
select,
textarea {
  font-family: $screenfont;
}

/* general styling of fields */
input {
  line-height: 1.3;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="date"],
input[type="number"],
textarea {
  width: $input_width;
  padding: .5em $input_padding;
  color: inherit;
  outline: none;
  border: 1px solid $border_color;
  @include box-shadow(0 1px 2px 0 darken($shadow_color, 15%) inset);
  @include border-radius($border_radius);
  font-size: inherit;

  &:hover {
    border-color: darken($border_color, 18%);
  }

  &:focus {
    border-color: lighten($primary_color, 10%);
    @include box-shadow(0 0 2px lighten($primary_color, 10%));
    @include transition(all 0.17s linear);
  }
}

input[type="file"],
input[type="range"] {
  width: auto;
  max-width: $input_width;
  padding: .5em 0;
}

input[type="range"] {
  width: $input_width;
  padding-top: .3em;
}

input[type="number"] {
  width: 50px;
  text-align: left;
  padding: .3em $input_padding;
}

select {
  min-width: $input_width/1.5;
  width: auto;
  max-width: $input_width;
  padding: .45em $input_padding;
  position: relative;
  top: .1em;
  font-size: 100%;
  color: $text_color;

  &[multiple="multiple"] {
    background: $white_color;
    height: auto;
    line-height: 1.5;
    border: 1px solid $border_color;
  }
}

textarea {
  height: auto;
  resize: none;
  overflow: auto;
}

/* placeholder for various browsers
   (needs to be separate) */
input::-webkit-input-placeholder {
  color: $placeholder_color;
  font-style: italic;
}

input:-moz-placeholder {
  color: $placeholder_color;
  font-style: italic;
}

/* remove placeholder on focus
   (needs to be separate) */
input:focus::-webkit-input-placeholder {
  color: $transparent_white_color;
}

input:focus:-moz-placeholder {
  color: $transparent_white_color;
}

/* required field */
.required {
  .label,
  .control-label {
    position: relative;

    &:after {
      display: inline-block;
      position: absolute;
      right: 0.9em;
      top: .3em;
      font-size: 125%;
      font-weight: bold;
      content: '*';
      color: $primary_color;
    }
  }

  &.warning {
    .label:after,
    .control-label:after {
      color: $warning_color;
    }
  }

  &.error {
    .label:after,
    .control-label:after {
      color: $error_color;
    }
  }
}

/* informative values */
.informative {
  display: inline-block;
  width: $input_width;
  padding: .75em 0;
  line-height: 1.3;
  font-size: 100%;
  color: $readonly_text_color;
}

/* readonly field */
.readonly input,
input[readonly="readonly"],
textarea[readonly="readonly"] {
  color: $readonly_text_color;

  &:hover,
  &:focus {
    border: 1px solid $border_color;
    @include box-shadow(0 1px 2px 0 darken($shadow_color, 15%) inset);
  }
}

/* disabled field */
.disabled {
  label {
    color: $disabled_text_color;
  }
}

input[disabled="disabled"],
textarea[disabled="disabled"] {
  color: $disabled_text_color;
  background: $disabled_color;
  border: 1px solid $border_color;

  &:hover,
  &:focus {
    border: 1px solid $border_color;
    @include box-shadow(0 1px 2px 0 darken($shadow_color, 15%) inset);
  }
}

select[disabled="disabled"] {
  color: $disabled_text_color;
}

input[type="file"][disabled="disabled"] {
  color: $disabled_text_color;
  border: 0 none;
  @include box-shadow(none);
}
/* checking items */
.checkbox,
.radio {
  .control {
    display: block;
    padding: .75em 1.75em 0 .1em;

    label {
      padding-right: 1.25em;
    }
  }

  & > label + .control {
    display: inline-block;
  }

  &.horizontal .control {
    display: inline-block;
    margin: 0 .5em 0 0;
  }

  &:not(.inline) {
    label {
      line-height: 2;
    }
  }

  input[type="radio"],
  input[type="checkbox"] {
    margin: 0 2px 0 0;
    position: relative;
  }

  &.inline {
    .control {
      display: inline-block;
      margin-left: 1.25em;
    }
  }
}

/**
 * @name Input Messages
 *
 * @description Different types of input messages that a user may use to display
 *   contextual information or help text.
 *
 * .input-message the basic building block of all input messages
 * .label-help    displays a help message to the left of the label through a hoverable icon
 */
.input-help span,
.input-note,
.input-hint,
.input-message {
  display: inline-block;
  max-width: $input_width;
  line-height: 1.1;
  vertical-align: middle;
  font-size: 90%;
  white-space: normal;
  padding: 0.875em $input_padding;
}

// -- HELP
.input-help {
  i {
    display: inline-block;
    position: relative;
    height: 1.25em;
    width: 1.25em;
    text-align: center;
    font-style: normal;
    color: $note_text_color;
    @include text-shadow(0 1px 0 rgba($white_color, 0.8));
    @include border-radius(50%);
    border: 1px solid $light_border_color;
    @include background(
      $light_box_color
      linear-gradient($light_box_gradient, darken($light_box_color, 4%)));
    cursor: default;

    &:hover {
      color: $white_color;
      @include text-shadow(0 1px 1px rgba($black_color, 0.3));
      border-color: $dark_box_color;
      @include background(
        $dark_box_color
        linear-gradient($dark_box_gradient, lighten($dark_box_color, 3%)));
    }

    // triangle for box
    &:after {
      display: none;
      @include opacity(0.97);
      content: "";
      height: 0;
      width: 0;
      border-style: solid;
      border-width: 0 .75em .7em .75em;
      border-color: $transparent_white_color $transparent_white_color $dark_box_gradient;
      position: absolute;
      bottom: -1em;
      left: -0.2em;
      z-index: 2;
    }
  }

  span {
    display: none;
    @include opacity(0.97);
    position: absolute;
    left: 5px;
    top: 3em;
    z-index: 1;
    width: $left_column_width - 40px;
    margin: 0;
    @include border-radius($border_radius);
    @include linear_gradient($dark_box_color, $dark_box_gradient, $dark_box_color, 20%);
    @include filter-gradient($dark_box_gradient, $dark_box_color);
    color: lighten($rh_cream, 30%);
    border-color: $dark_box_color;
    text-align: left;
    line-height: 1.2;
    @include text-shadow(0 1px 1px rgba($black_color, 0.2));
    @include box-shadow(0 1px 3px $shadow_color);
  }

  i:hover {
    &:after {
      display: block;
    }

    & ~ span {
      display: block;
    }
  }
}

.input-note {
  display: block;
  font-size: 85%;
  color: $note_text_color;
  margin: 0;
  padding-top: 3px;
  padding-bottom: 0;

  strong {
    font-weight: bold;
    font-size: 110%;
  }
}

// -- HINTS & MESSAGES
.input-hint,
.input-message {
  position: relative;
  left: 0;
  color: $message_text_color;
  margin-left: 10px;
  @include linear_gradient($light_box_color, $light_box_gradient, $light_box_color, 30%);
  @include filter-gradient($light_box_gradient, $light_box_color);
  @include border-radius($border_radius);
  border: 1px solid $light_border_color;
  @include box-shadow($shadow_color 0 1px 3px);
  vertical-align: top;

  &:before, // triangle left
  &:after { // border of left triangle
    content: "";
    display: block;
    height: 0;
    width: 0;
    border-style: solid;
    border-width: 8px 8px 8px 0;
    border-color: $transparent_white_color $light_box_color $transparent_white_color;
    position: absolute;
    top: 15px;
    left: -8px;
    margin-top: -8px; // half size of triangle
    z-index: 2;
  }

  &:after {
    border-right-color: $light_border_color;
    left: -9px; // 1 more pixel than arrow width
    z-index: 1;
  }
}

// -- HINT
.input-hint {
  @include opacity(0);
  position: absolute;
  top: 0;
  left: $input_width;

  &.always_visible {
    @include opacity(1);
    position: relative;
    left: 0;
  }
}

// -- MESSAGE
.input-message ~ .input-hint {
  display: none;
}

.control_group,
.control-group {
  input:focus ~ .input-hint {
    @include transition(all 0.29s ease);
    @include opacity(1);
    left: $input_width;

    &.always_visible {
      left: 0;
    }
  }
}

/**
 * @name Input Validations
 *
 * @description Different types of input messages that a user may use to display
 *   contextual information or help text.
 *
 * .success defines color associations to be applied for success messages (default: green)
 * .warning defines color associations to be applied for warning messages (default: yellow)
 * .error   defines color associations to be applied for error messages (default: red)
 */
.success,
.warning,
.error {
  .input-message {
    padding-left: 29px;
    max-width: $input_width;
  }
}

.success {
  .input-message {
    background: $light_box_color image-url("alchemy/icons/success_icon.png") no-repeat 8px 6px; // for IE6-9
    @include background(
      image-url("alchemy/icons/success_icon.png") no-repeat 8px 6px,
      linear-gradient($light_box_gradient, $light_box_color 30%));
    @include filter-gradient($transparent_white_color, $transparent_white_color);
  }
}

.warning {
  @include input_field($warning_color);

  .input-message {
    background: $light_box_color image-url("alchemy/icons/warning_icon.png") no-repeat 7px 6px; // for IE6-9
    @include background(
      image-url("alchemy/icons/warning_icon.png") no-repeat 7px 6px,
      linear-gradient($light_box_gradient, $light_box_color 30%));
    @include filter-gradient($transparent_white_color, $transparent_white_color);
  }
}

.error {
  @include input_field($error_color);

  .input-message {
    background: $light_box_color image-url("alchemy/icons/error_icon.png") no-repeat 7px 6px; // for IE6-9
    @include background(
      image-url("alchemy/icons/error_icon.png") no-repeat 7px 6px,
      linear-gradient($light_box_gradient, $light_box_color 30%));
    @include filter-gradient($transparent_white_color, $transparent_white_color);
  }
}

/**
 * Responsive Overrides
 */
@import "forms_responsive";


/**
 * IE tweaks
 */
@import "forms_ie";
